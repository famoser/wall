agnes:
  version: 3
  config_folder: '.deploy'
  build_target:
    connection:
      type: local
    path: .build

github:
  api_token: '%env(GITHUB_API_TOKEN)%'
  repository: famoser/wall

data:
  shared_folders:
    - var/persistent

  files:
    - path: .env.local
      required: true

scripts:
  build:
    hook: build
    script:
      - composer install --verbose --prefer-dist --no-interaction --no-dev --optimize-autoloader --no-scripts
      - yarn install
      - yarn run encore production
      - rm -rf node_modules

  deploy:
    hook: deploy
    script:
      - php bin/console cache:clear -n
      - find var -type d -print0 | xargs -0 chmod 0755
      - find var -type f -print0 | xargs -0 chmod 0644
      - php bin/console doctrine:migrations:migrate -n

  rollback:
    hook: rollback
    script:
      - cd $PREVIOUS_RELEASE_PATH && export MIGRATE_TO=$(php bin/console doctrine:migrations:latest)
      - php bin/console doctrine:migrations:migrate $MIGRATE_TO -n

  fixtures:
    hook: after_deploy
    instance_filter: '*:*:dev'
    script:
      - wget -O composer.phar https://getcomposer.org/composer-stable.phar && chmod +x composer.phar && ./composer.phar install --optimize-autoloader --no-scripts
      - php bin/console --env=dev doctrine:fixtures:load -q

tasks:
  copy_staging_after_deploy:
    after: deploy
    action: copy
    instance_filter: '*:*:staging'
    arguments: { source: production }

  deploy_dev_after_release:
    after: release
    action: deploy
    arguments: { target: '*:*:dev' }

policies:
  strategy: unanimous # all matching policies must be valid
  allow_if_all_abstain: true # if no matching policy is found, the execution is allowed

  deploy:
    - type: stage_write_up
      layers:
        0: [dev]
        1: [production]

  copy_shared:
    - type: stage_write_down
      layers:
        0: [dev]
        1: [production]
    - type: same_release
